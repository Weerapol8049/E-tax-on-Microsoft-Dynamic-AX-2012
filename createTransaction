private void createTransaction(str json)
{
    StmEtaxTable        etaxTable;
    StmEtaxLine         etaxLine;
    StmEtaxReferenceLetter  referenceLetter;

    Map                 map;
    mapEnumerator       mapEnumerator;
    InvoiceId           _invoiceId;
    str                 value;
    boolean             let;

    referenceLetter = StmEtaxReferenceLetter::find(documentType);
    setPrefix(strFmt("%1 (%2)",referenceLetter.Description, referenceLetter.LetterId));

    etaxTable.clear();
    if (projInvoiceJour)
    {
        etaxTable.ProjInvoiceJour = projInvoiceJour.RecId;
        _invoiceId = projInvoiceJour.ProjInvoiceId;
    }
    else if (custInvoiceJour)
    {
        etaxTable.CustInvoiceJour = custInvoiceJour.RecId;
        _invoiceId = custInvoiceJour.InvoiceId;
    }
    else if (custInvoiceTable)
    {
        etaxTable.CustInvoiceTable = custInvoiceTable.RecId;
        _invoiceId = custInvoiceTable.InvoiceId;
    }
    else if (projProposalJour)
    {
        etaxTable.ProjProposalJour = projProposalJour.RecId;
        _invoiceId = projProposalJour.ProjInvoiceId;
    }
    else if (projProposalJour)
    {
        etaxTable.ProjProposalJour = projProposalJour.RecId;
        _invoiceId = projProposalJour.ProjInvoiceId;
    }
    else if (taxTrans)
    {
        etaxTable.TaxTrans = taxTrans.RecId;
        _invoiceId = invoiceId;
    }
    else if (ledgerJournalTrans)
    {
        etaxTable.LedgerJournalTrans = ledgerJournalTrans.RecId;
        _invoiceId = invoiceId;
    }

    etaxTable.DocumentCode      = documentType;
    etaxTable.DocumentName      = StmEtaxReferenceLetter::find(documentType).Description;
    etaxTable.InvoiceId         = _invoiceId;

    map = RetailCommonWebAPI::getMapFromJsonString(json);
    mapEnumerator = map.getEnumerator();
    while (mapEnumerator.moveNext())
    {
        if (mapEnumerator.currentKey() == "status")
        {
            etaxTable.RespStatus = mapEnumerator.currentValue();

            if (etaxTable.RespStatus == "OK")
            {
                let = true;
                if (etaxTable.CustInvoiceJour)
                    this.updateStatusCustInvoiceJour();
                else if (etaxTable.CustInvoiceTable)
                    this.updateStatusCustInvoiceTable();
                else if (etaxTable.ProjInvoiceJour)
                    this.updateStatusProjInvoiceJour();
            }
            else if (etaxTable.RespStatus == "ER")
                let = false;
        }
        if (mapEnumerator.currentKey() == "pdfURL")
        {
            etaxTable.pdfURL = mapEnumerator.currentValue();
            info(strFmt("PDF URL : %1", etaxTable.pdfURL));
        }
        if (mapEnumerator.currentKey() == "xmlURL")
            etaxTable.xmlURL = mapEnumerator.currentValue();
        if (mapEnumerator.currentKey() == "chatURL")
            etaxTable.chatURL = mapEnumerator.currentValue();
        if (mapEnumerator.currentKey() == "errorCode")
            etaxTable.RespErrorCode = mapEnumerator.currentValue();
        if (mapEnumerator.currentKey() == "errorMessage")
        {
            etaxTable.RespErrorMessage = mapEnumerator.currentValue();
            error(strFmt("%1", etaxTable.RespErrorMessage));
        }
        if (mapEnumerator.currentKey() == "transactionCode")
            etaxTable.RespTransactionCode = mapEnumerator.currentValue();
    }

    etaxTable.insert();

    if (let)
        info("Completed.");
    else
        error("Cancel.");
}
