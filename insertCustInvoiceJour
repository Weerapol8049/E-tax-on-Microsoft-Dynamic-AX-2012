private void insertCustInvoiceJour()
{
    CustInvoiceTrans            custInvoiceTransDeposit;
    CustInvoiceTrans            custInvoiceTrans;
    CustInvoiceTable            custInvoiceTableTmp, _custInvoiceTable;
    CustInvoiceLine             custInvoiceLineTmp;
    InventTable                 inventTable;
    EcoResProduct               ecoResProduct;
    EcoResProductTranslation    ecoResProductTranslation;
    InventTableModule           inventTableModule;
    TaxGroupData                taxGroupData;
    CustTable                   custTable;
    SalesTable                  salesTable;
    SalesLine                   salesLine;
    LogisticsPostalAddress      postalAddress;
    DimensionAttributeValueCombination  dimAttrValueCombin;

    str 20                      currentDateTime;
    int                         i, rowCount;
    Name                        name;
    Description                 description, item;
    DiscAmount                  discAmount;
    AmountCur                   taxBasisTotalAmount, deposit, invoiceAmount;
    Amount                      currectAmount, originalAmount;
    InvoiceId                   invoiceIdRef;
    str 20                      invoiceDateRef;


    currentDateTime     = this.formatDateTimeStr(DateTimeUtil::utcNow());
    custTable           = CustTable::find(custInvoiceJour.InvoiceAccount);
    postalAddress       = LogisticsPostalAddress::findRecId(custInvoiceJour.custTable_InvoiceAccount().postalAddress().RecId);//wk#1.n 20210721
    salesTable          = SalesTable::find(custInvoiceJour.SalesId);
    _custInvoiceTable   = CustInvoiceTable::findPostedInvoice(custInvoiceJour.InvoiceAccount, custInvoiceJour.InvoiceId, custInvoiceJour.InvoiceDate);

    documentHeader.clear();
    documentHeader.DataTypeId                   = "H";
    documentHeader.DocumentTypeCode             = documentType;//ประเภทเอกสาร
    documentHeader.PdfTemplateId                = StmEtaxReferenceLetter::find(documentType).Template;// H25
    documentHeader.DocumentName                 = StmEtaxReferenceLetter::find(documentType).Description;//ชื่อเอกสาร
    documentHeader.DocumentId                   = custInvoiceJour.InvoiceId;// H03 - [T04, 380, 80, 81] เลขที่เอกสาร
    documentHeader.DocumentIssueDtm             = this.formatDateTimeStr(str2datetime(strFmt("%1 00:00:00",custInvoiceJour.InvoiceDate), 123));// H04 - [T04, 380, 80, 81] วันที่
    documentHeader.CreatePurposeCode            = purposeCode;//รหัสสาเหตุการออกเอกสาร
    documentHeader.CreatePurpose                = purpose == "" ? StmEtaxPurposeCode::find(purposeCode).Description : purpose;// H06 - [80, 81] เหตุผลการลดหนี้
    documentHeader.BuyerOrderAssignId           = salesTable ? strReplace(SalesTable.CustomerRef, "\n", " ")  : _custInvoiceTable.STMCustReference;// H12 - [T04, 380] ใบสั่งซื้อเลขที่
    documentHeader.DocumentRemark               = salesTable ? strReplace(salesTable.StmEtaxRemark, "\n", " ") : strReplace(_custInvoiceTable.StmEtaxRemark, "\n", " ") ;// H15 - [T04, 380, 81] หมายเหตุ
    documentHeader.SendEmail                    = NoYes::Yes;//Indicator ส่งเมลให้ลูกค้า

    if (purposeCode != "")
    {
        documentHeader.AdditionalRefAssignId        = _custInvoiceTable.STMEtaxInvoiceRef == "" ? "N/A" : _custInvoiceTable.STMEtaxInvoiceRef;// H07 - [80, 81] อ้างอิงใบกำกับภาษีเดิมเลขที่
        documentHeader.AdditionalRefIssueDtm        = this.formatDateTimeStr(str2datetime(strFmt("%1 00:00:00",_custInvoiceTable.STMEtaxInvoiceDate), 123));// H08 -[80, 81] วันที่
        documentHeader.AdditionalRefTypeCode        = documentType;//ประเภทเอกสารอ้างอิง
        documentHeader.AdditionalRefDocumentName    = SalesTable::find(custInvoiceJour.SalesId).CustomerRef;//ชื่อเอกสารอ้างอิง
    }
    documentHeader.insert();

    refHeader = documentHeader.RecId;

    information.clear();
    information.DataTypeId                      = "B";
    information.RefRecId                        = refHeader;
    information.Id                              = custInvoiceJour.InvoiceAccount;//รหัสผู้ซื้อ
    information.Name                            = custInvoiceJour.InvoiceAccount == "000006" ? custTable.name() : custInvoiceJour.InvoicingName;// B02 - [80, 81] ชื่อผู้ซื้อ
    information.TaxIdType                       = custTable.TaxNumTHJIS == "" ? "OTHR" : "TXID";//B03 - [T04, 380] ผู้ซื้อ
    information.TaxId                           = custTable.TaxNumTHJIS == "" ?  "N/A" : custTable.TaxNumTHJIS;// B04 - [T04, 380, 80, 81] เลขประจำตัวผู้เสียภาษีอากร
    information.BranchId                        = custTable.TaxBranchTHJIS == "" ? "00000" : custTable.TaxBranchTHJIS;// B05 - [T04, 380, 80, 81] สาขา
    information.PostCode                        = strLTrim(postalAddress.ZipCode);// B10 - [T04, 380, 80, 81] ที่อยู่
    information.AddressLine1                    = this.address(postalAddress);// B13 - [T04, 380, 80, 81] ที่อยู่
    information.CountryId                       = postalAddress.CountryRegionId == "THA" ? "TH" : postalAddress.CountryRegionId;//รหัสประเทศ
    information.URID                            = this.emailAddress(custInvoiceJour.InvoiceAccount);//อีเมล

    //custInvoiceJour.Payment //Credit term
    information.insert();

    while select custInvoiceTransDeposit
            where custInvoiceTransDeposit.SalesId              == custInvoiceJour.SalesId
               && custInvoiceTransDeposit.InvoiceId            == custInvoiceJour.InvoiceId
               && custInvoiceTransDeposit.InvoiceDate          == custInvoiceJour.InvoiceDate
               && custInvoiceTransDeposit.numberSequenceGroup  == custInvoiceJour.numberSequenceGroup
    {
        //กรณีเงินมัดจำมีจำนวนรายการมากกว่า 1 รายการ ไม่ให้แสดงในรายการของ report แต่ให้ขึ้นยอดที่ Footer
        //กรณีเงินมัดจำมีจำนวน 1 รายการ ให้แสดงในรายการของ report
        rowCount++;
    }

    while select custInvoiceTrans
            where custInvoiceTrans.SalesId              == custInvoiceJour.SalesId
               && custInvoiceTrans.InvoiceId            == custInvoiceJour.InvoiceId
               && custInvoiceTrans.InvoiceDate          == custInvoiceJour.InvoiceDate
               && custInvoiceTrans.numberSequenceGroup  == custInvoiceJour.numberSequenceGroup
    {
        i++;

        if (custInvoiceTrans.Name like "*มัดจำ*" && custInvoiceTrans.LineAmount < 0 && rowCount > 1)
        {
            deposit =   custInvoiceTrans.LineAmount + custInvoiceTrans.LineAmountTax;
        }
        else if (
            (!(custInvoiceTrans.Name like "*มัดจำ*") && custInvoiceTrans.LineAmount < 0) ||
            rowCount == 1 ||
             custInvoiceTrans.Qty > 0
            )
        {
            while select custInvoiceTableTmp
                where custInvoiceTableTmp.InvoiceId == custInvoiceJour.InvoiceId
                    && custInvoiceTableTmp.InvoiceDate == custInvoiceJour.InvoiceDate
                    && custInvoiceTableTmp.numberSequenceGroup == custInvoiceJour.numberSequenceGroup
                join custInvoiceLineTmp
                where custInvoiceLineTmp.ParentRecId == custInvoiceTableTmp.RecId
                    && custInvoiceLineTmp.LedgerDimension == custInvoiceTrans.LedgerDimension
            {
                if (custInvoiceLineTmp.InvoiceTxt == custInvoiceTrans.Name)
                    item        = custInvoiceLineTmp.Description;

                description = strReplace(strReplace(custInvoiceTrans.Name, "\n", " "), '"', '\\"');//replace Enter and inches symbol 10"
            }

            if (!custInvoiceLineTmp)
            {
                 if (custInvoiceTrans.ItemId)
                {
                    inventTable         = inventTable::find(custInvoiceTrans.ItemId);
                    name                = custInvoiceTrans.ItemId;
                    item                = custInvoiceTrans.ItemId;
                    //name                = EcoResProduct::findByDisplayProductNumber(inventTable.ItemId).productName();
                    inventTableModule   = InventTableModule::find(custInvoiceTrans.ItemId, ModuleInventPurchSales::Invent);
                    description         = strReplace(strReplace(custInvoiceTrans.Name, "\n", " "), '"', '\\"');//replace Enter and inches symbol 10"
                }
            }



            invoiceAmount += custInvoiceTrans.lineAmountInclTax();

            if (custInvoiceTrans.SalesId && purposeCode != "")//ข้อมูล invoice reference กรณีจากการ Post sales invoice
            {
                select salesLine where salesLine.InventTransId == custInvoiceTrans.InventTransId;

                invoiceIdRef    = salesLine.STMEtaxInvoiceRef == "" ? "N/A" : conPeek(str2con(salesLine.STMEtaxInvoiceRef, ';'), 1);// H07 - [80, 81] อ้างอิงใบกำกับภาษีเดิมเลขที่
                invoiceDateRef  = this.formatDateTimeStr(str2datetime(strFmt("%1 00:00:00",salesLine.STMEtaxInvoiceDate), 123));// H08 -[80, 81] วันที่
                originalAmount  = salesLine.STMEtaxOriginalAmount;
                currectAmount   = salesLine.STMEtaxCurrectAmount;

                update_recordSet documentHeader
                setting
                    AdditionalRefAssignId  = invoiceIdRef,
                    AdditionalRefIssueDtm  = invoiceDateRef
                where documentHeader.RecId == refHeader;
            }

            tradeLineItem.clear();

            // ตั้งค่าข้อมูลหลัก
            tradeLineItem.DataTypeId                    = "L";
            tradeLineItem.RefRecId                      = refHeader;
            tradeLineItem.LineId                        = int2str(i);// L01 - [T04, 380, 80, 81] ลำดับ
            tradeLineItem.ProductId                     = item;// L02 - [T04, 380, 80, 81] รหัสสินค้า
            tradeLineItem.ProductName                   = description;// L03 - [T04, 380, 80, 81] รายการ
            //tradeLineItem.ProductDesc                   = description;//รายละเอียดสินค้า

            tradeLineItem.ProductChargeAmount           = abs(custInvoiceTrans.SalesPrice);// L10 - [T04, 380] ราคาต่อหน่วย
            tradeLineItem.ProductChargeCurrencyCode     = custInvoiceTrans.CurrencyCode;// L11 - [80, 81] ราคาต่อหน่วย
            tradeLineItem.ProductAllowanceChargeInd     = "false";//true = ค่าธรรมเนียม / false = ส่วนลด
            tradeLineItem.ProductAllowanceActualAmount  = 0;// F29 - [380] - ส่วนลด
            tradeLineItem.ProductAllowanceActualCurrencyCode = custInvoiceTrans.CurrencyCode;
            tradeLineItem.ProductQuantity               = abs(custInvoiceTrans.Qty);// L17 - [T04, 380, 80, 81] จำนวน
            //tradeLineItem.ProductUnitCode               = inventTableModule.UnitId;//รหัสหน่วยสินค้า
            //tradeLineItem.ProductRemark1                = "";

            // การตั้งค่าภาษีและการคิดภาษี
            tradeLineItem.LineTaxTypeCode               = "VAT";//รหัสประเภทภาษี
            tradeLineItem.LineTaxCalRate                = TaxGroupData::find(custInvoiceTrans.TaxGroup, custInvoiceTrans.TaxGroup).showTaxValue();//อัตราภาษี
            tradeLineItem.LineBasisAmount               = abs(custInvoiceTrans.LineAmount);//มูลค่าสินค้าหรือบริการ (ไม่รวมภาษีมูลค่าเพิ่ม)
            tradeLineItem.LineBasisCurrencyCode         = custInvoiceTrans.CurrencyCode;
            tradeLineItem.LineTaxCalAmount              = abs(custInvoiceTrans.TaxAmount);//มูลค่าภาษีมูลค่าเพิ่ม
            tradeLineItem.LineTaxCalCurrencyCode        = custInvoiceTrans.CurrencyCode;

            // การคำนวณยอดรวม
            tradeLineItem.LineNetTotalAmount            = abs(custInvoiceTrans.LineAmount);// L33 - [T04, 380, 80, 81] จำนวนเงิน
            tradeLineItem.LineNetTotalCurrencyCode      = custInvoiceTrans.CurrencyCode;
            tradeLineItem.LineNetIncludeTaxTotalAmount  = abs(custInvoiceTrans.lineAmountInclTax());//จำนวนเงินรวม
            tradeLineItem.LineNetIncludeTaxTotalCurrencyCode = custInvoiceTrans.CurrencyCode;
            tradeLineItem.insert();
        }


    }

    if (documentType == "T04")
    {
        taxBasisTotalAmount = abs(custInvoiceJour.SalesBalance) - abs(custInvoiceJour.SumMarkup);
        currectAmount       = invoiceAmount;
    }
    else
    {
        taxBasisTotalAmount = abs(custInvoiceJour.SalesBalance);
        currectAmount       = custInvoiceJour.SalesId ? currectAmount : _custInvoiceTable.STMEtaxCurrectAmount;
        originalAmount      = custInvoiceJour.SalesId ? originalAmount : _custInvoiceTable.STMEtaxOriginalAmount;
    }


    documentFooter.clear();
    documentFooter.DataTypeId                   = "F";
    documentFooter.RefRecId                     = refHeader;
    documentFooter.LineTotalCount               = i;//จำนวนรายการสินค้า
    documentFooter.InvoiceCurrencycode          = custInvoiceJour.CurrencyCode;
    documentFooter.TaxTypeCode1                 = "VAT";//รหัสประเภทภาษี
    documentFooter.TaxCalRate1                  = strFmt("%1",TaxGroupData::find(custInvoiceJour.TaxGroup, custInvoiceJour.TaxGroup).showTaxValue());//อัตราภาษี
    documentFooter.BasisAmount1                 = strFmt("%1",abs(custInvoiceJour.SalesBalance));//มูลค่าสินค้า/บริการ (ไม่รวมภาษีมูลค่าเพิ่ม)
    documentFooter.BasisCurrencyCode1           = custInvoiceJour.CurrencyCode;
    documentFooter.TaxCalAmount1                = strFmt("%1",abs(custInvoiceJour.SumTax));//มูลค่าภาษีมูลค่าเพิ่ม
    documentFooter.TaxCalCurrencyCode1          = custInvoiceJour.CurrencyCode;
    documentFooter.PaymentTypeCode              = "";//รหัสประเภทส่วนลดหรือค่าธรรมเนียม
    documentFooter.PaymentDescription           = "";//รายละเอียดเงื่อนไขการชำระเงิน

    documentFooter.OriginalTotalAmount          = originalAmount;// F36 - [80, 81] มูลค่าตามใบกำกับภาษีเดิม
    documentFooter.OriginalTotalCurrencyCode    = "THB";
    documentFooter.AdjustedInformationAmount    = abs(custInvoiceJour.SalesBalance);//F40 - [80, 81] ผลต่าง
    documentFooter.AdjustedInformationCurrencyCode = "THB";

    documentFooter.LineTotalAmount              = abs(currectAmount);// F38 - [T04, 380, 80, 81] รวมเป็นเงิน
    documentFooter.LineTotalCurrencyCode        = custInvoiceJour.CurrencyCode;

    documentFooter.AllowanceTotalAmount         = 0;//ส่วนลดทั้งหมด
    documentFooter.AllowanceTotalCurrencyCode   = "";
    documentFooter.ChargeTotalAmount            = 0;//ค่าธรรมเนียมทั้งหมด
    documentFooter.ChargeTotalCurrencyCode      = "";
    documentFooter.TaxBasisTotalAmount          = taxBasisTotalAmount;// F46 - [T04, 380, 80, 81 ผลต่าง] มูลค่าสินค้าที่นำมาคิดภาษี
    documentFooter.TaxBasisTotalCurrencyCode    = custInvoiceJour.CurrencyCode;
    documentFooter.TaxTotalAmount               = abs(custInvoiceJour.SumTax);// F48 - [T04, 380, 80, 81] ภาษีมูลค่าเพิ่ม
    documentFooter.TaxTotalCurrencyCode         = custInvoiceJour.CurrencyCode;
    documentFooter.GrandTotalAmount             = abs(custInvoiceJour.InvoiceAmount);// F50 - [T04, 380, 80, 81] รวมจำนวนเงิน
    documentFooter.GrandTotalCurrencyCode       = custInvoiceJour.CurrencyCode;
    documentFooter.TermPayment                  = strFmt("%1 วัน",PaymTerm::find(custInvoiceJour.Payment).NumOfDays);// F52 - [T04, 380, 80, 81] เงื่อนไขการชำระเงิน
    documentFooter.PaymentDueDtm                = str2datetime(strFmt("%1 00:00:00",custInvoiceJour.InvoiceDate + PaymTerm::find(custInvoiceJour.Payment).NumOfDays), 123); //DateTimeUtil::utcNow();// F35 - [T04, 380, 80, 81] วันครบกำหนดชำระ
    documentFooter.DocumentRemark1              = strFmt("%1",custInvoiceJour.EndDisc);// F70 - [T04] - ส่วนลด
    documentFooter.DocumentRemark2              = strFmt("%1",invoiceAmount - custInvoiceJour.EndDisc);// F71 - [T04] - ยอดหลังหักส่วนลด
    documentFooter.DocumentRemark3              = strFmt("%1",abs(deposit));// F72 - [T04] - หักมัดจำ
    documentFooter.DocumentRemark4              = "";// F73 - [T04] - โอนเงิน ธนาคาร
    documentFooter.DocumentRemark5              = "";// F74 - [T04] - โอนเงิน วันที่
    documentFooter.DocumentRemark6              = "";// F75 - [T04] - เช็ค ธนาคาร
    documentFooter.DocumentRemark7              = "";// F76 - [T04] - เช็ค เลขที่เช็ค
    documentFooter.DocumentRemark8              = "";// F77 - [T04] - เช็ค วันที่
    documentFooter.insert();

    fileTrailer.clear();
    fileTrailer.DataTypeId              = "T";
    fileTrailer.RefRecId                = refHeader;
    fileTrailer.TotalDocumentCount      = 1;
    fileTrailer.insert();
}
