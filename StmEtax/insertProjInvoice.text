private void insertProjInvoice()
{
    PSAProjProposalProj         psaProjProposalProj;
    ProjInvoiceOnAcc            projInvoiceOnAcc;
    ProjInvoiceOnAccDetail      projInvoiceOnAccDetail;
    ProjOnAccTrans              projOnAccTrans;
    ProjTable                   projTable;
    TaxGroupData                taxGroupData;
    CustTable                   custTable;
    TaxTrans                    taxTransTmp;
    LogisticsPostalAddress      postalAddress;

    str 20                      currentDateTime;
    int                         i;
    Notes                       remark;
    Name                        productName;
    TaxAmountCur                taxAmount;
    Amount                      retention;

    currentDateTime = this.formatDateTimeStr(DateTimeUtil::utcNow());

    postalAddress   = LogisticsPostalAddress::findRecId(projInvoiceJour.DeliveryPostalAddress);//wk#1.n 20210721

    select sum(InvoicedNow) from psaProjProposalProj
           where psaProjProposalProj.ProjProposalId == projInvoiceJour.ProposalId && psaProjProposalProj.IsPreBill == NoYes::No;

    select projProposalJour
        where projProposalJour.InvoiceDate == projInvoiceJour.InvoiceDate
            && projProposalJour.ProjInvoiceId == projInvoiceJour.ProjInvoiceId;

      select firstOnly projTable order by ProjId
            where projTable.ProjInvoiceProjId == projInvoiceJour.ProjInvoiceProjId;

    if (projProposalJour.STMRemark)
    {
        remark    = " / " + projProposalJour.STMRemark;
    }

    if (projTable.ParentId)
        remark              = ProjTable::find(projTable.ParentId).Name + remark;
    else
        remark              = projTable.Name + remark;

    select sum(TaxAmountCur) from taxTransTmp
        where taxTransTmp.Voucher == projInvoiceJour.LedgerVoucher
            && taxTransTmp.TransDate == projInvoiceJour.InvoiceDate
        ;

    taxAmount   = taxTransTmp.TaxAmountCur; //ภาษีมูลค่าเพิ่ม
    retention   = this.retention(projProposalJour.ProposalId);

    documentHeader.clear();
    documentHeader.DataTypeId                   = "H";
    documentHeader.DocumentTypeCode             = documentType;
    documentHeader.PdfTemplateId                = StmEtaxReferenceLetter::find(documentType).Template;// H25
    documentHeader.DocumentName                 = StmEtaxReferenceLetter::find(documentType).Description;
    documentHeader.DocumentId                   = projInvoiceJour.ProjInvoiceId;// H03 - [T04, 380] เลขที่เอกสาร
    documentHeader.DocumentIssueDtm             = this.formatDateTimeStr(str2datetime(strFmt("%1 00:00:00",projInvoiceJour.InvoiceDate), 123));// H04 - [T04, 380] วันที่
    documentHeader.CreatePurposeCode            = purposeCode;
    documentHeader.CreatePurpose                = purpose == "" ? StmEtaxPurposeCode::find(purposeCode).Description : purpose;
    documentHeader.SendEmail                    = NoYes::Yes;//Indicator ส่งเมลให้ลูกค้า

    if (purposeCode != "")
    {
        //ใบลดหนี้ ท้ายเอกสาร
        documentHeader.AdditionalRefAssignId        = projProposalJour.STMCustRef == "" ? projInvoiceJour.ProjInvoiceId : projProposalJour.STMCustRef ;
        documentHeader.AdditionalRefIssueDtm        = this.formatDateTimeStr(str2datetime(strFmt("%1 00:00:00",projProposalJour.InvoiceDate + PaymTerm::find(projProposalJour.Payment).NumOfDays), 123));
        documentHeader.AdditionalRefTypeCode        = documentType;
    }

    documentHeader.AdditionalRefDocumentName    = projProposalJour.STMCustRef;
    documentHeader.DeliveryTypeCode             = "";
    documentHeader.BuyerOrderAssignId           = "";// H12 - [T04, 380] ใบสั่งซื้อเลขที่
    documentHeader.BuyerOrderIssueDtm           = this.formatDateTimeStr(str2datetime(strFmt("%1 00:00:00",projProposalJour.InvoiceDate + PaymTerm::find(projProposalJour.Payment).NumOfDays), 123));
    documentHeader.DocumentRemark               = strReplace(remark, "\n", " ");// H15 - [T04, 380] หมายเหตุ
    documentHeader.insert();

    refHeader = documentHeader.RecId;

    custTable       = CustTable::find(projProposalJour.InvoiceAccount);

    information.clear();
    information.DataTypeId                      = "B";
    information.RefRecId                        = refHeader;
    information.Id                              = projProposalJour.InvoiceAccount;
    information.Name                            = projProposalJour.DeliveryName;
    information.TaxIdType                       = custTable.TaxNumTHJIS == "" ? "OTHR" : "TXID";//B03 - [T04, 380] ผู้ซื้อ
    information.TaxId                           = custTable.TaxNumTHJIS == "" ?  "N/A" : custTable.TaxNumTHJIS;// B04 - [T04, 380] เลขประจำตัวผู้เสียภาษีอากร
    information.BranchId                        = custTable.TaxBranchTHJIS == "" ? "00000" : custTable.TaxBranchTHJIS;// B05 - [T04, 380] สาขา
    information.PostCode                        = strLTrim(postalAddress.ZipCode);// B10 - [T04, 380] ที่อยู่
    information.AddressLine1                    = this.address(postalAddress);// B13 - [T04, 380] ที่อยู่
    information.CountryId                       = postalAddress.CountryRegionId == "THA" ? "TH" : postalAddress.CountryRegionId;
    information.URID                            = this.emailAddress(custTable.AccountNum);//อีเมล
    information.insert();

    refHeader = documentHeader.RecId;

    while select projInvoiceOnAcc
            where projInvoiceOnAcc.InvoiceDate    == projInvoiceJour.InvoiceDate
               && projInvoiceOnAcc.ProjInvoiceId  == projInvoiceJour.ProjInvoiceId
    {
        i++;
        //projTable = ProjTable::find(projInvoiceOnAcc.ProjId);

        select projInvoiceOnAccDetail
            where projInvoiceOnAccDetail.InvoiceRefRecId == projInvoiceOnAcc.RecId;

        select projOnAccTrans
            where projOnAccTrans.TransId    == projInvoiceOnAcc.TransId;

        if (documentType == "380")
            productName = projProposalJour.PSAInvoiceTxtPre + " Type " + projOnAccTrans.STMTypeboq;
        else if (documentType == "81" || documentType == "80")
            productName = projInvoiceOnAcc.Txt;

        tradeLineItem.clear();

        // ตั้งค่าข้อมูลหลัก
        tradeLineItem.DataTypeId                        = "L";
        tradeLineItem.LineId                            = int2str(i);// L01 - [T04, 380] ลำดับ
        tradeLineItem.RefRecId                          = refHeader;

        // ข้อมูลผลิตภัณฑ์
        tradeLineItem.ProductId                         = projInvoiceOnAcc.ProjId;// L02 - [T04, 380] รหัสสินค้า
        tradeLineItem.ProductName                       = productName;// L03 - [T04, 380] รายการ
        tradeLineItem.ProductDesc                       = "";

        tradeLineItem.ProductChargeAmount               = abs(projOnAccTrans.TotalSalesAmountCur);// L10 - [T04, 380] ราคาต่อหน่วย
        tradeLineItem.ProductChargeCurrencyCode         = projInvoiceOnAcc.CurrencyId;
        tradeLineItem.ProductAllowanceActualAmount      = 0;// F29 - [380] - ส่วนลด
        tradeLineItem.ProductAllowanceActualCurrencyCode    = projInvoiceOnAcc.CurrencyId;

        tradeLineItem.ProductQuantity                   = abs(projInvoiceOnAcc.Qty);// L17 - [T04, 380] จำนวน
        tradeLineItem.ProductUnitCode                   = "";
        tradeLineItem.ProductQuantityPerUnit            = abs(projInvoiceOnAcc.Amount);
        tradeLineItem.ProductRemark1                    = "";

        // การตั้งค่าภาษีและการคิดภาษี
        tradeLineItem.LineTaxTypeCode                   = "VAT";
        tradeLineItem.LineTaxCalRate                    = TaxGroupData::find(projInvoiceOnAcc.TaxGroupId, projInvoiceOnAcc.TaxGroupId).showTaxValue();
        tradeLineItem.LineBasisAmount                   = abs(projInvoiceOnAcc.Amount);
        tradeLineItem.LineBasisCurrencyCode             = projInvoiceOnAcc.CurrencyId;
        tradeLineItem.LineTaxCalAmount                  = abs(projInvoiceOnAcc.TaxAmount);
        tradeLineItem.LineTaxCalCurrencyCode            = projInvoiceOnAcc.CurrencyId;
        tradeLineItem.LineTaxTotalAmount                = 0;
        tradeLineItem.LineTaxTotalCurrencyCode          = "";

        // การตั้งค่าเงื่อนไขพิเศษ
        tradeLineItem.LineAllowanceChargeInd            = "";
        tradeLineItem.LineAllowanceActualAmount         = 0;
        tradeLineItem.LineAllowanceActualCurrencyCode   = "";
        tradeLineItem.LineAllowanceReasonCode           = "";
        tradeLineItem.LineAllowanceReason               = "";

        // การคำนวณยอดรวม
        tradeLineItem.LineNetTotalAmount                = abs(projInvoiceOnAccDetail.Amount);// L33 - [T04, 380] จำนวนเงิน
        tradeLineItem.LineNetTotalCurrencyCode          = projInvoiceOnAcc.CurrencyId;
        tradeLineItem.LineNetIncludeTaxTotalAmount      = abs(projInvoiceOnAccDetail.Amount);
        tradeLineItem.LineNetIncludeTaxTotalCurrencyCode = projInvoiceOnAcc.CurrencyId;
        tradeLineItem.insert();
    }

    documentFooter.clear();
    documentFooter.DataTypeId                   = "F";
    documentFooter.RefRecId                     = refHeader;
    documentFooter.LineTotalCount               = i;
    documentFooter.InvoiceCurrencycode          = projInvoiceJour.CurrencyId;
    documentFooter.TaxTypeCode1                 = "VAT";
    documentFooter.TaxCalRate1                  = strFmt("%1", TaxGroupData::find(projInvoiceJour.TaxGroupId, projInvoiceJour.TaxGroupId).showTaxValue());
    documentFooter.BasisAmount1                 = strFmt("%1",abs(projInvoiceJour.OnAccountAmount));
    documentFooter.BasisCurrencyCode1           = projInvoiceJour.CurrencyId;
    documentFooter.TaxCalAmount1                = strFmt("%1",abs(projInvoiceJour.SumTax));
    documentFooter.TaxCalCurrencyCode1          = projInvoiceJour.CurrencyId;
    documentFooter.PaymentTypeCode              = "";
    documentFooter.PaymentDescription           = "";
    //documentFooter.OriginalTotalAmount          = 0;
    documentFooter.OriginalTotalCurrencyCode    = projInvoiceJour.CurrencyId;
    documentFooter.LineTotalAmount              = abs(projInvoiceJour.OnAccountAmount);// F38 - [T04, 380] รวมเป็นเงิน
    documentFooter.LineTotalCurrencyCode        = projInvoiceJour.CurrencyId;
    //documentFooter.AdjustedInformationAmount    = 0;
    documentFooter.AdjustedInformationCurrencyCode = projInvoiceJour.CurrencyId;
    documentFooter.TaxBasisTotalAmount          = abs(projInvoiceJour.OnAccountAmount);// F46 - [T04, 380] มูลค่าสินค้าที่นำมาคิดภาษี
    documentFooter.TaxBasisTotalCurrencyCode    = projInvoiceJour.CurrencyId;
    documentFooter.TaxTotalAmount               = abs(projInvoiceJour.SumTax);// F48 - [T04, 380] ภาษีมูลค่าเพิ่ม
    documentFooter.TaxTotalCurrencyCode         = projInvoiceJour.CurrencyId;
    documentFooter.GrandTotalAmount             = abs(projInvoiceJour.InvoiceAmount);// F50 - [T04, 380] รวมจำนวนเงิน
    documentFooter.GrandTotalCurrencyCode       = projInvoiceJour.CurrencyId;
    documentFooter.TermPayment                  = "";// F52 - [T04, 380] เงื่อนไขการชำระเงิน
    documentFooter.PaymentDueDtm                = DateTimeUtil::utcNow();// F35 - [T04, 380] ครบกำหนดชำระ
    documentFooter.DocumentRemark1              = "";// F70 - [T04] - ส่วนลด
    documentFooter.DocumentRemark2              = "";// F71 - [T04] - ยอดหลังหักส่วนลด
    documentFooter.DocumentRemark3              = "";// F72 - [T04] - หักมัดจำ
    documentFooter.DocumentRemark4              = "";// F73 - [T04] - โอนเงิน ธนาคาร
    documentFooter.DocumentRemark5              = "";// F74 - [T04] - โอนเงิน วันที่
    documentFooter.DocumentRemark6              = "";// F75 - [T04] - เช็ค ธนาคาร
    documentFooter.DocumentRemark7              = "";// F76 - [T04] - เช็ค เลขที่เช็ค
    documentFooter.DocumentRemark8              = "";// F77 - [T04] - เช็ค วันที่
    documentFooter.insert();

    fileTrailer.clear();
    fileTrailer.DataTypeId              = "T";
    fileTrailer.RefRecId                = refHeader;
    fileTrailer.TotalDocumentCount      = 1;
    fileTrailer.insert();

}
